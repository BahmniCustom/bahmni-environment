  <pipelines group="Bahmni_provision">
    <pipeline name="Provision">
      <params>
        <param name="branch">master</param>
      </params>
      <materials>
        <git url="https://github.com/Bhamni/bahmni-environment.git" branch="#{branch}" dest="bahmni-environment" autoUpdate="false" />
      </materials>
      <stage name="provisionActive" cleanWorkingDir="true">
        <approval type="manual" />
        <environmentvariables>
          <variable name="FACTER_bahmni_server_type">
            <value>active</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="sh" workingdir="bahmni-environment">
                <arg>scripts/provision.sh</arg>
                <runif status="passed" />
              </exec>
              <exec command="sudo">
                <arg>cp</arg>
                <arg>-R</arg>
                <arg>/bahmni_temp/logs</arg>
                <arg>.</arg>
                <runif status="passed" />
              </exec>
              <exec command="sudo">
                <arg>chown</arg>
                <arg>-R</arg>
                <arg>go:go</arg>
                <arg>logs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>Active</resource>
            </resources>
            <artifacts>
              <artifact src="logs" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="provisionPassive" cleanWorkingDir="true">
        <approval type="manual" />
        <environmentvariables>
          <variable name="FACTER_bahmni_server_type">
            <value>passive</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="defaultJob">
            <tasks>
              <exec command="sh" workingdir="bahmni-environment">
                <arg>scripts/provision.sh</arg>
                <runif status="passed" />
              </exec>
              <exec command="sudo">
                <arg>cp</arg>
                <arg>-R</arg>
                <arg>/bahmni_temp/logs</arg>
                <arg>.</arg>
                <runif status="passed" />
              </exec>
              <exec command="sudo">
                <arg>chown</arg>
                <arg>-R</arg>
                <arg>go:go</arg>
                <arg>logs</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>Passive</resource>
            </resources>
            <artifacts>
              <artifact src="logs" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="deployment">
    <pipeline name="Build_Deploy_Bahmni" isLocked="false">
      <params>
        <param name="branch">master</param>
        <param name="implementationName">default</param>
      </params>
      <materials>
        <git url="https://github.com/Bhamni/OpenELIS.git" branch="#{branch}" dest="OpenElis" autoUpdate="false" />
        <git url="https://github.com/Bhamni/#{implementationName}-config.git" branch="#{branch}" dest="#{implementationName}-config" autoUpdate="false" />
        <git url="https://github.com/Bhamni/openmrs-module-bahmniapps.git" branch="#{branch}" dest="openmrs-module-bahmniapps" autoUpdate="false" materialName="openmrs-module-bahmniapps" />
        <git url="https://github.com/Bhamni/openmrs-distro-bahmni.git" branch="#{branch}" dest="openmrs-distro-bahmni" autoUpdate="false" />
        <git url="https://github.com/Bhamni/bahmni-environment" branch="#{branch}" dest="bahmni-environment" autoUpdate="false" materialName="bahmni-environment" />
        <git url="https://github.com/bhamni/client_side_logging" dest="client_side_logging_source" autoUpdate="false" />
        <git url="https://github.com/Bhamni/bahmni-reports.git" branch="#{branch}" dest="bahmni-reports" autoUpdate="false" />
      </materials>
      <stage name="defaultStage">
        <approval type="manual" />
        <jobs>
          <job name="ClientSideLogging">
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="client_side_logging_source/client_side_logging.py" dest="client_side_logging" />
              <artifact src="client_side_logging_source/client_side_logging.wsgi" dest="client_side_logging" />
              <artifact src="client_side_logging_source/__init__.py" dest="client_side_logging" />
              <artifact src="client_side_logging_source/logging.yml" dest="client_side_logging" />
              <artifact src="client_side_logging_source/RotatingLogger.py" dest="client_side_logging" />
            </artifacts>
          </job>
          <job name="Distro">
            <tasks>
              <exec command="mvn" workingdir="openmrs-distro-bahmni">
                <arg>clean</arg>
                <arg>install</arg>
                <arg>-DskipTests</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="openmrs-distro-bahmni/distro/target/distro-*.zip" dest="deployables" />
            </artifacts>
          </job>
          <job name="OpenElis">
            <tasks>
              <ant target="dist" workingdir="OpenElis">
                <runif status="passed" />
              </ant>
              <exec command="curl">
                <arg>-o</arg>
                <arg>go_revisions.sh</arg>
                <arg>https://raw.githubusercontent.com/Bhamni/bahmni-environment/master/scripts/ci/go_revisions.sh</arg>
                <runif status="passed" />
              </exec>
              <exec command="chmod">
                <arg>a+x</arg>
                <arg>go_revisions.sh</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>./go_revisions.sh &gt; bahmni_openelis_revision.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="OpenElis/openelis/dist/openelis.war" dest="deployables" />
              <artifact src="OpenElis/OpenElis.zip" dest="deployables" />
              <artifact src="bahmni_openelis_revision.txt" dest="deployables" />
            </artifacts>
          </job>
          <job name="ImplementationConfig">
            <tasks>
              <exec command="/bin/bash" workingdir="#{implementationName}-config">
                <arg>--login</arg>
                <arg>scripts/package.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="#{implementationName}-config/target/#{implementationName}_config.zip" dest="deployables" />
            </artifacts>
          </job>
          <job name="BahmniApps">
            <tasks>
              <exec command="bower" workingdir="openmrs-module-bahmniapps/ui">
                <arg>cache</arg>
                <arg>clean</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="openmrs-module-bahmniapps/ui">
                <arg>--login</arg>
                <arg>scripts/package.sh</arg>
                <runif status="passed" />
              </exec>
              <exec command="mvn" workingdir="openmrs-module-bahmniapps">
                <arg>clean</arg>
                <arg>package</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="openmrs-module-bahmniapps/ui/target/bahmniapps.zip" dest="deployables" />
              <artifact src="openmrs-module-bahmniapps/omod/target/bahmniapps-*.omod" dest="deployables/ui-modules" />
            </artifacts>
          </job>
          <job name="BahmniEnvironment">
            <tasks>
              <exec command="sh" workingdir="bahmni-environment">
                <arg>scripts/validate-manifests.sh</arg>
                <runif status="passed" />
              </exec>
              <exec command="zip">
                <arg>-r</arg>
                <arg>bahmni-environment.zip</arg>
                <arg>bahmni-environment</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="bahmni-environment.zip" />
            </artifacts>
          </job>
          <job name="BahmniReports">
            <tasks>
              <exec command="mvn" workingdir="bahmni-reports">
                <arg>clean</arg>
                <arg>install</arg>
                <arg>-DskipTests</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="bahmni-reports/target/bahmnireports.war" dest="deployables" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="package">
        <jobs>
          <job name="Fetch">
            <tasks>
              <fetchartifact pipeline="" stage="defaultStage" job="Distro" srcdir="deployables">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="" stage="defaultStage" job="BahmniApps" srcdir="deployables">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="" stage="defaultStage" job="OpenElis" srcdir="deployables" dest="elis">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="" stage="defaultStage" job="ImplementationConfig" srcfile="deployables/#{implementationName}_config.zip" dest="deployables-implementation">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="" stage="defaultStage" job="BahmniEnvironment" srcfile="bahmni-environment.zip">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="" stage="defaultStage" job="ClientSideLogging" srcdir="client_side_logging" dest="deployables">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="" stage="defaultStage" job="BahmniReports" srcfile="deployables/bahmnireports.war" dest="deployables-reports/">
                <runif status="passed" />
              </fetchartifact>
              <exec command="cp">
                <arg>bahmni-environment/scripts/ci/bahmni_deploy.sh</arg>
                <arg>deployables</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/sh">
                <arg>bahmni-environment/scripts/ci/create_all_modules.sh</arg>
                <arg>#{implementationName}</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="all_installer.sh" />
              <artifact src="#{implementationName}_config_installer.sh" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="deploy_to_preprod" fetchMaterials="false" cleanWorkingDir="true">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="Build_Deploy_Bahmni" stage="package" job="Fetch" srcfile="all_installer.sh" dest="preprod_deploy_artefacts">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="Build_Deploy_Bahmni" stage="package" job="Fetch" srcfile="#{implementationName}_config_installer.sh" dest="preprod_deploy_artefacts">
                <runif status="passed" />
              </fetchartifact>
              <exec command="sudo" workingdir="preprod_deploy_artefacts">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>all_installer.sh</arg>
                <runif status="passed" />
              </exec>
              <exec command="sudo" workingdir="preprod_deploy_artefacts">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>#{implementationName}_config_installer.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>PreProd</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="predeploy_slave" fetchMaterials="false" cleanWorkingDir="true">
        <approval type="manual" />
        <jobs>
          <job name="predeploy_slave">
            <tasks>
              <fetchartifact pipeline="" stage="defaultStage" job="BahmniEnvironment" srcfile="bahmni-environment.zip">
                <runif status="passed" />
              </fetchartifact>
              <exec command="unzip">
                <arg>bahmni-environment.zip</arg>
                <runif status="passed" />
              </exec>
              <exec command="sudo" workingdir="bahmni-environment">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>scripts/predeploy-slave.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>Passive</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="predeploy_master" fetchMaterials="false" cleanWorkingDir="true">
        <jobs>
          <job name="predeploy_master">
            <tasks>
              <fetchartifact pipeline="" stage="defaultStage" job="BahmniEnvironment" srcdir="bahmni-environment.zip">
                <runif status="passed" />
              </fetchartifact>
              <exec command="unzip">
                <arg>bahmni-environment.zip</arg>
                <runif status="passed" />
              </exec>
              <exec command="sudo" workingdir="bahmni-environment">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>scripts/predeploy-master.sh</arg>
                <arg>password</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>Active</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="deploy_master" fetchMaterials="false">
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="Build_Deploy_Bahmni" stage="package" job="Fetch" srcfile="all_installer.sh" dest="prod_deploy_artefacts">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="Build_Deploy_Bahmni" stage="package" job="Fetch" srcfile="#{implementationName}_config_installer.sh" dest="prod_deploy_artefacts">
                <runif status="passed" />
              </fetchartifact>
              <exec command="sudo" workingdir="prod_deploy_artefacts">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>all_installer.sh</arg>
                <runif status="passed" />
              </exec>
              <exec command="sudo" workingdir="prod_deploy_artefacts">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>#{implementationName}_config_installer.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>Active</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="deploy_slave" fetchMaterials="false">
        <environmentvariables>
          <variable name="FACTER_bahmni_server_type">
            <value>passive</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="Build_Deploy_Bahmni" stage="package" job="Fetch" srcfile="all_installer.sh" dest="prod_deploy_artefacts">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="Build_Deploy_Bahmni" stage="package" job="Fetch" srcfile="#{implementationName}_config_installer.sh" dest="prod_deploy_artefacts">
                <runif status="passed" />
              </fetchartifact>
              <exec command="sudo" workingdir="prod_deploy_artefacts">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>all_installer.sh</arg>
                <runif status="passed" />
              </exec>
              <exec command="sudo" workingdir="prod_deploy_artefacts">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>#{implementationName}_config_installer.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>Passive</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="postdeploy_master" fetchMaterials="false">
        <jobs>
          <job name="postdeploy_master">
            <tasks>
              <exec command="sudo" workingdir="bahmni-environment">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>scripts/postdeploy-master.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>Active</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="postdeploy_slave" fetchMaterials="false">
        <jobs>
          <job name="postdeploy_slave">
            <tasks>
              <exec command="sudo" workingdir="bahmni-environment">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>scripts/postdeploy-slave.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>Passive</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Deploy_config" isLocked="false">
      <params>
        <param name="implementationName">default</param>
        <param name="branch">master</param>
      </params>
      <materials>
        <git url="https://github.com/Bhamni/#{implementationName}-config.git" branch="#{branch}" dest="#{implementationName}-config" autoUpdate="false" />
        <git url="https://github.com/Bhamni/bahmni-environment" branch="#{branch}" dest="bahmni-environment" autoUpdate="false" />
      </materials>
      <stage name="defaultStage">
        <approval type="manual" />
        <jobs>
          <job name="ImplementationConfig">
            <tasks>
              <exec command="/bin/bash" workingdir="#{implementationName}-config">
                <arg>--login</arg>
                <arg>scripts/package.sh</arg>
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="#{implementationName}-config/target/#{implementationName}_config.zip" dest="deployables" />
            </artifacts>
          </job>
          <job name="BahmniEnvironment">
            <tasks>
              <exec command="sh" workingdir="bahmni-environment">
                <arg>scripts/validate-manifests.sh</arg>
              </exec>
              <exec command="zip">
                <arg>-r</arg>
                <arg>bahmni-environment.zip</arg>
                <arg>bahmni-environment</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="bahmni-environment.zip" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="package">
        <jobs>
          <job name="Installer">
            <tasks>
              <fetchartifact pipeline="Deploy_config" stage="defaultStage" job="ImplementationConfig" srcfile="deployables/#{implementationName}_config.zip" dest="deployables-implementation">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="Deploy_config" stage="defaultStage" job="BahmniEnvironment" srcfile="bahmni-environment.zip" dest="deployables-implementation">
                <runif status="passed" />
              </fetchartifact>
              <exec command="/bin/sh">
                <arg>bahmni-environment/scripts/ci/create_module_installer.sh</arg>
                <arg>deployables-implementation</arg>
                <arg>#{implementationName}_config_installer.sh</arg>
                <arg>"Implementation Config Installer"</arg>
                <arg>implementation_config</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="#{implementationName}_config_installer.sh" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="deploy_preprod" fetchMaterials="false">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="Deploy_config" stage="package" job="Installer" srcfile="#{implementationName}_config_installer.sh">
                <runif status="passed" />
              </fetchartifact>
              <exec command="sudo">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>#{implementationName}_config_installer.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>PreProd</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="deploy_passive" fetchMaterials="false">
        <approval type="manual" />
        <environmentvariables>
          <variable name="FACTER_bahmni_server_type">
            <value>passive</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="Deploy_config" stage="package" job="Installer" srcfile="#{implementationName}_config_installer.sh">
                <runif status="passed" />
              </fetchartifact>
              <exec command="sudo">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>#{implementationName}_config_installer.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>PASSIVE</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="deploy_active" fetchMaterials="false">
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="Deploy_config" stage="package" job="Installer" srcfile="#{implementationName}_config_installer.sh">
                <runif status="passed" />
              </fetchartifact>
              <exec command="sudo">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>#{implementationName}_config_installer.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>ACTIVE</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Deploy_reports" isLocked="false">
      <params>
        <param name="branch">master</param>
      </params>
      <materials>
        <git url="https://github.com/Bhamni/bahmni-reports.git" branch="#{branch}" dest="bahmni-reports" autoUpdate="false" />
        <git url="https://github.com/Bhamni/bahmni-environment" branch="#{branch}" dest="bahmni-environment" autoUpdate="false" materialName="bahmni-environment" />
      </materials>
      <stage name="defaultStage">
        <approval type="manual" />
        <jobs>
          <job name="Build">
            <tasks>
              <exec command="mvn" workingdir="bahmni-reports">
                <arg>clean</arg>
                <arg>install</arg>
                <arg>-DskipTests</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="bahmni-reports/target/bahmnireports.war" dest="deployables" />
            </artifacts>
          </job>
          <job name="BahmniEnvironment">
            <tasks>
              <exec command="sh" workingdir="bahmni-environment">
                <arg>scripts/validate-manifests.sh</arg>
                <runif status="passed" />
              </exec>
              <exec command="zip">
                <arg>-r</arg>
                <arg>bahmni-environment.zip</arg>
                <arg>bahmni-environment</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="bahmni-environment.zip" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="package">
        <jobs>
          <job name="installer">
            <tasks>
              <fetchartifact pipeline="" stage="defaultStage" job="Build" srcfile="deployables/bahmnireports.war" dest="deployables-reports/">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="" stage="defaultStage" job="BahmniEnvironment" srcfile="bahmni-environment.zip" dest="deployables-reports/">
                <runif status="passed" />
              </fetchartifact>
              <exec command="/bin/sh">
                <arg>bahmni-environment/scripts/ci/create_module_installer.sh</arg>
                <arg>deployables-reports</arg>
                <arg>bahmni_reports_installer.sh</arg>
                <arg>"Bahmni Reports Installer"</arg>
                <arg>bahmni_reports</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>BuildBhamni</resource>
            </resources>
            <artifacts>
              <artifact src="bahmni_reports_installer.sh" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="deploy_preprod" fetchMaterials="false">
        <approval type="manual" />
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="" stage="package" job="installer" srcfile="bahmni_reports_installer.sh">
                <runif status="passed" />
              </fetchartifact>
              <exec command="sudo">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>bahmni_reports_installer.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>PreProd</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="deploy_passive" fetchMaterials="false">
        <approval type="manual" />
        <environmentvariables>
          <variable name="FACTER_bahmni_server_type">
            <value>passive</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="" stage="package" job="installer" srcfile="bahmni_reports_installer.sh">
                <runif status="passed" />
              </fetchartifact>
              <exec command="sudo">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>bahmni_reports_installer.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>PASSIVE</resource>
            </resources>
          </job>
        </jobs>
      </stage>
      <stage name="deploy_active" fetchMaterials="false">
        <jobs>
          <job name="deploy">
            <tasks>
              <fetchartifact pipeline="" stage="package" job="installer" srcfile="bahmni_reports_installer.sh">
                <runif status="passed" />
              </fetchartifact>
              <exec command="sudo">
                <arg>-E</arg>
                <arg>sh</arg>
                <arg>bahmni_reports_installer.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <resources>
              <resource>ACTIVE</resource>
            </resources>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <environments>
    <environment name="Bahmni">
      <environmentvariables>
        <variable name="FACTER_bahmni_user_name">
          <value>bahmni</value>
        </variable>
        <variable name="FACTER_implementation_name">
          <value>default</value>
        </variable>
        <variable name="FACTER_deploy_bahmni_openerp">
          <value>false</value>
        </variable>
        <variable name="FACTER_deploy_bahmni_openelis">
          <value>false</value>
        </variable>
        <variable name="FACTER_go_bahmni_yum_repo_url">
          <value>172.18.2.52</value>
        </variable>
        <variable name="FACTER_bahmni_server_type">
          <value>active</value>
        </variable>
      </environmentvariables>
      <pipelines>
        <pipeline name="Build_Deploy_Bahmni" />
        <pipeline name="Provision" />
        <pipeline name="Deploy_config" />
        <pipeline name="Deploy_reports" />
      </pipelines>
    </environment>
  </environments>