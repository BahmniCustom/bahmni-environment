rm -rf *

BASE_URL=<%= @build_source %>
MRS_Build_Name=<%= @mrs_go_build_name %>
Config_Build_Name=<%= config_go_build_name %>
OpenERP_Build_Name=<%= @erp_go_build_name %>
OpenELIS_Build_Name=<%= @elis_go_build_name %>
IMPLEMENTATION_NAME=<%= @implementation_name %>
reference_data_go_build_name=<%= @reference_data_go_build_name %>
BRANCH=<%= @source_code_branch %>
GO_USER=<%= @go_server_user %>
GO_PWD=<%= @go_server_pwd %>

echo "CI SERVER: $BASE_URL"

echo "Downloading openmrs artifacts"
echo "--------------------------------------"
wget --user=$GO_USER --password=$GO_PWD --auth-no-challenge  $BASE_URL/go/files/Bahmni_MRS_$BRANCH/$MRS_Build_Name/FunctionalTestsStage/Latest/FunctionalTests/deployables.zip && unzip -jqo deployables.zip && rm deployables.zip

mkdir ui-modules
mv bahmniapps-<%= @bahmni_release_version %>.omod ui-modules/

<% if @deploy_bahmni_openerp == "true" -%>
echo "Downloading openerp artifacts"
echo "-------------------------------------"
wget --user=$GO_USER --password=$GO_PWD --auth-no-challenge  $BASE_URL/go/files/OpenERP_$BRANCH/$OpenERP_Build_Name/runFunctionalTestsStage/Latest/openerp-atomfeed-service/openerp-atomfeed-service.war

wget --user=$GO_USER --password=$GO_PWD --auth-no-challenge  $BASE_URL/go/files/OpenERP_$BRANCH/$OpenERP_Build_Name/runFunctionalTestsStage/Latest/runFunctionalTestsJob/deployables.zip && unzip -jqo deployables.zip && rm deployables.zip
<% end -%>

<% if @deploy_bahmni_openelis == "true" -%>
echo "Downloading openelis artifacts"
echo "-------------------------------"
wget --user=$GO_USER --password=$GO_PWD --auth-no-challenge  $BASE_URL/go/files/OpenElis_$BRANCH/$OpenELIS_Build_Name/Build/Latest/build/deployables.zip && unzip -jqo deployables.zip && rm deployables.zip
<% end -%>

echo "Downloading reference_data artifacts"
echo "-------------------------------------"
wget --user=$GO_USER --password=$GO_PWD --auth-no-challenge  $BASE_URL/go/files/ReferenceData_$BRANCH/$reference_data_go_build_name/Build/Latest/build/deployables.zip && unzip -jqo deployables.zip && rm deployables.zip

echo "Downloading config artifacts"
echo "-----------------------------"
wget --user=$GO_USER --password=$GO_PWD --auth-no-challenge  $BASE_URL/go/files/Build_${IMPLEMENTATION_NAME}_config_$BRANCH/$Config_Build_Name/BuildStage/Latest/Build/${IMPLEMENTATION_NAME}_config.zip

rm -f *_md5.checksum