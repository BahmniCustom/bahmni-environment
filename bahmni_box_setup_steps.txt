Guide To INSTALL Bahmni Software on a CentOS Minimal System
===============================================================


1. Install CentosOS (Minimal) 
  http://wiki.centos.org/Manuals/ReleaseNotes/CentOSMinimalCD6.5
  For example:
  download "CentOS-6.5-x86_64-minimal.iso" from http://centos.mirror.net.in/centos/6.5
  - In Virtual Box create a new Virtual Image (Bahmni_CentOS) and give its type as Red Hat Linux with 1.5GB RAM and 20 GB Virtual HDD. Leave other options as default.
  - Click on "Storage" window and select new CD/DVD drive option, to specify the CentOS ISO Image which you downloaded.
  - Start the newly created virtual box image. It will show you the INSTALL Wizard for CentOS.
  
  NOTE: 
  a) It is mandatory to choose CentOS MINIMAL, so that no older versions of software like PostGRES or JAVA get installed. These will otherwise conflict 
  with the current puppet scripts. Its best to have just a basic system, and let the puppet scripts do all the installations.
  b) If you need to have a UI / Browser also running on this machine, then choose CentOS MINIMAL + DESKTOP. 


2. Check if properly networked.
    2.1. In VirtualBox, choose bridged network to connect to internet.
    2.2. Run "ifconfig" and make sure eth0 has proper IP. You should be able to ping google. Else try "ifup eth0". Check ifconfig again.
   

3. Install ruby (187)
    sudo yum install ruby
   
4.  a) Install Puppet - (http://docs.puppetlabs.com/guides/installation.html#red-hat-enterprise-linux-and-derivatives)
       sudo rpm -ivh http://yum.puppetlabs.com/el/6/products/x86_64/puppetlabs-release-6-7.noarch.rpm
       sudo yum install puppet

    b) (Optional step): Edit the /etc/puppet/puppet.conf file and make an entry (This will ensure that manifest are executed sequentially):
       ordering = manifest 

5.  Get Bahmni-Environment which contains Puppet provision scripts:

    a) Install git - "sudo yum install git"    
    b) Clone Bahmni-Environment repo in /root/bahmni -
        mkdir -p /root/bahmni
        cd /root/bahmni
        git clone https://github.com/Bhamni/bahmni-environment.git
        cd bahmni-environment


6. Install wget (if its not already present)
   sudo yum install wget

7. Mkdir /packages

8. Copy localrepo, servers, tools, Python-packages folders to /packages/ (to avoid download of these from internet)
  (You could do scp. Like: 'scp -r * root@10.4.31.206:/packages/' from the folder which has all your folders)

  - Note: If you are going to run the provisioning without internet, then ensure that all exisinting yum repos are disabled 
    including, base, updates and extra repos by editing the files in /etc/yum.repos.d/ and adding enabled=0 line to each repo.
    Then run the command yum repolist enabled to see that none are enabled (except local which will be created by the provision command)


9. Set the following environment variables (which will be used by Puppet during provisioning). 
   For future, it might be best to set this permananently in your ~/.bashrc file.
  
    export BAHMNI_USER_NAME=bahmni  (default is jss)
    export IMPLEMENTATION_NAME=<your-implementation-name> (default is jss)


10. Run Provision Command (note: ensure that bahmni_user variable is set to bahmni/jss as you prefer)
    cd /root/bahmni/bahmni-environment
    ./scripts/run-puppet-manifest.sh provision

11. 
    Create openmrs db (user root/password): openmrs
    Create OpenERP DB: (psql with user postgres and then grant owner to openerp): openerp
    (Alter database openerp owner to openerp)


12. Download & install latest BAHMNI build from CI.
    ./scripts/run-puppet-manifest.sh download-build
    

13. Deploy the Implementation Specific Builds (will read your implementation_name variable to decide which one to install)
    ./scripts/run-puppet-manifest.sh deploy-implementation
    (If on deploy you get an error for JDK or tools.jar, ensure your default java is latest 1.7, and not old java1.5. If it is, then rename old java and create new sym link: 'ln -s /usr/java/default/bin/java /usr/bin/java')      


14. Login to OpenERP using URL: http://<IP>:8069/ 
    Use credentials admin/admin or admin/password.
    NOTE: If credentials are admin/admin, then CHANGE THEM to admin/password.
    (Click on Administrator name on top right corner -> Preferences -> Change password)
    This is required, because default ATOM Feed expects admin/password as credentials.

15. 
    Check if the following URLs are accessible:
    (May need to restart the box once)
    OpenERP:                      http://<IP>:8069/ (admin/password)
    OpenMRS:                      https://<IP>/openmrs  (admin/test)
    OpenELIS:                     http://<IP>:8080/openelis/ (admin/adminADMIN!)
    Bahmni:                       http://<IP>/home (admin/test) --- May need to give roles to user in OpenMRS if you see blank dashboard
    Reference Data (Grails app):  http://<IP>/reference-data/
    Jasper Reports:               http://<IP>:8080/jasperserver/ (jasperadmin/jasperadmin)

    NOTE: To switch off IPTables in case your browser can't hit: 'service iptables stop'

16. Misc Configuration Steps:
    -------------------------
    - OpenELIS needs an Organization to be defined. Right now its JSS, but will need to be different per implementation. Do this in "Administration" screen.
    - The ATOM Feed properties file for elis needs organization entry. Set this to appropriate value:
    reference.data.default.organization=JSS (or set environment variable ELIS_DEFAULT_ORGANIZATION_NAME to appropriate value to override this.)
    (openelis/WEB-INF/classes/atomfeed.properties)
    - There is an issue with Address Hierarchy, so if you don't see the Registration Screen, then in OpenMRS, navigate to Address Hierarchy Screen. This will fix the issue.
    - You may also need to add "Diagnostics" data.

17. For OpenERP, follow these steps post-install:
   
      1) Install the following Modules:  
        - Warehouse Management Module
        - Sales Management Module
        - Purchase Management Module
        - Accounting and Finance Module

      When asked about the Financial Account system choose: (INR, 0, 0, Indian Account System)

      2) Setting -> config -> warehouse -> Enable the following:
        
        - Track Serial Number on Products, 
        - Expiry Date on Serial Number, 
        - Manage Multiple Location, 
        - Manage different  unit of measures on Products
      
      3) Settings -> config -> General Settings -> Allow user to import data from csv files
      4) Settings -> Users -> Administrator choose (Edit) — Access rights -> enable Technical Features. 

      5) Logout from OpenERP and then re-Login
      6) Go to Settings -> Modules -> Update Module List (Updated)
      7) Restart OpenERP ('sudo service openerp stop',  and then 'sudo service openerp start')
      8) Go to Settings -> Modules -> Installed Modules and in search box type "Bahmni"
          - Install 'Bahmni Module Install' (which installs all Bahmni OpenERP dependent modules)
          
          Ensure these are also installed: 
            - Bahmni Purchase flow enhancement
            - Bahmni Print Bill
            - Bahmni Seed Data install 
          
          - Don’t install Lab seed data
          - Don’t install DHIS2 stock export
      9) Uninstall Bahmni Logger   
      10) Go to Settings->Companies (Edit and add your hospital details: name, logo, address, etc).


===================================================================================================
Some todos we identified
===================================================================================================
TODO:

- [Fixed] The sequence in which local repo is created is arbitrary. MySQL install fails first time when you provision, and the repo gets created later.
Need to ensure that local repo is created first. 
- remove local packages dependencies - remove (require yum repo) 
------ create a new provision.pp file which will install all packages from internet.
------ Note that mySQL installation requires addition of another yum repo. This will be needed for Internet-mode installation.
- remove goServer
- Check how to enable download of packages, currently script downloads through public ip of GO of all current builds. we might not to use GO for package download and/or the bleeding packages 
* delete - /packages/localrepo ?